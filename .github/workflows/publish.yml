name: Publish

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Environment setup
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.23'
      - name: Install pnpm
        run: npm i -g pnpm
      - name: Replace version in package.json to be semver compatible
        run: sed -i "s/IN-DEV/$(echo $GITHUB_REF | sed 's/refs\/tags\///')/" package.json
      
      # Install dependencies
      - name: Install go dependencies
        run: go mod download
      - name: Install npm dependencies
        run: pnpm install

      # Build
      - name: Build
        run: pnpm build

      # Prepare release assets
      - name: Create release assets directory
        run: mkdir -p release-assets
      - name: Tar binaries
        run: tar -czf release-assets/binaries.tar.gz bin/ LICENSE README.md
      - name: Zip binaries
        run: zip -r release-assets/binaries.zip bin/ LICENSE README.md
      - name: Copy each binary to release assets
        run: |
          cat <<EOF > copy-binaries.sh
          #!/bin/bash
          for os in bin/*; do
              for arch in "\$os"/*; do
                  if [ -f "\$arch/ipc-json-bridge.exe" ]; then
                      os_name=\$(basename "\$os")
                      arch_name=\$(basename "\$arch")
                      cp "\$arch/ipc-json-bridge.exe" "release-assets/ipc-json-bridge-\$os_name-\$arch_name.exe"
                  else
                      os_name=\$(basename "\$os")
                      arch_name=\$(basename "\$arch")
                      cp "\$arch/ipc-json-bridge" "release-assets/ipc-json-bridge-\$os_name-\$arch_name"
                  fi
              done
          done
          EOF
          bash copy-binaries.sh
          rm copy-binaries.sh

      # Publish to npm, gh pages and releases
      - name: Publish package on NPM
        run: pnpm publish . --access public --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_SECRET }}
      - name: Publish Documentation
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: docs
          branch: gh-pages
      - name: Upload release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release-assets/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
